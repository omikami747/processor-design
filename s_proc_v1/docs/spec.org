#+TITLE: Specification Document 
#+AUTHOR: Omkar Girish Kamath
#+LATEX_HEADER:\usepackage{parskip}
* Modules in the processor
** RAM  
*** Theory
*** Interface 
** Program Counter
*** Theory
#+CAPTION: 
#+NAME:   fig:SED-HR4049
[[./images/reg8.jpg]]
8 bit register used to store the address *current* instruction being executed.
It is incremented after every /fetch-decode-execute-increment/ cycle .
*** Interface 
module pc (\\
d,\\
clk,\\
ce,\\
clr,\\
q\\
);
 \\
input [7:0] d     ; \\
input clk         ;   \\ 
input ce      ; \\
input clr     ; \\
output [7:0 ]q; \\

    | signal name | type   | size   |
    |-------------+--------+--------|
    | d           | input  | 8 bits |
    | clk         | input  | 1 bit  |
    | ce          | input  | 1 bit  |
    | clr         | input  | 1 bit  |
    | q           | output | 8 bits |
    |             |        |        |
    |-------------+--------+--------|
** Instruction Register
*** Theory
    Instruction Register (IR) : *16* bit register, updated at the end of the fetch phase with the instruction to be processed (decoded and executed).
[[./images/reg16.jpg]]
*** Interface 
module ir (\\
    d,\\
    clk,\\
    ce,\\
    clr,\\ 
    q\\
    );\\
              
  input  [15:0] d     ; \\
  input         clk   ;   \\ 
  input         ce    ; \\
  input         clr   ; \\
  output [15:0] q     ; \\
  
  | signal name | type   | size    |
  |-------------+--------+---------|
  | d           | input  | 16 bits |
  | clk         | input  | 1 bit   |
  | ce          | input  | 1 bit   |
  | clr         | input  | 1 bit   |
  | q           | output | 16 bits |
  |-------------+--------+---------|
               
** Decoder
*** Theory

*** Interface 
| Name   | size | function                                                         | type   |
|--------+------+------------------------------------------------------------------+--------|
| mux_a  |    1 | ALU A input MUX control                                          | output |
| mux_b  |    1 | ALU B input MUX control                                          | output |
| mux_c  |    1 | address MUX control, selecting PC or IR                          | output |
| en_da  |    1 | accumulator (ACC) register update control                        | output |
| en_pc  |    1 | program counter (PC) register update control                     | output |
| en_ir  |    1 | instruction register (IR) update control                         | output |
| ram_we |    1 | memory write enable control                                      | output |
| alu_c  |    5 | ALU control line                                                 | output |
| ir     |    8 | high byte of instruction register, contains opcode               | input  |
| zero   |    1 | connected to ALU output, if 1 indicates result is zero           | output |
| clk    |    1 | system clock                                                     | input  |
| ce     |    1 | clock enable, normally set to 1, if set to 0 processor will HALT | input  |
| clr    |    1 | system reset, if pulsed high system will be reset                | input  |
|--------+------+------------------------------------------------------------------+--------|
                                                                                                 

MUX_A : output, ALU A input MUX control

MUX_B : output, ALU B input MUX control 

MUX_C : output, address MUX control, selecting PC or IR 

EN_DA : output, accumulator (ACC) register update control 

EN_PC : output, program counter (PC) register update control 

EN_IR : output, instruction register (IR) update control 

RAM_WE : output, memory write enable control 

ALU_S0 : output, ALU control line 

ALU_S1 : output, ALU control line

ALU_S2 : output, ALU control line 

ALU_S3 : output, ALU control line 

ALU_S4 : output, ALU control line 
 (*combining all the ALU control lines we get a 5 bit out alu_c signal*) 

IR : input bus, 8bits, high byte of instruction register, contains opcode 

ZERO : input, driven by 8bit NOR gate connected to ALU output, if 1 indicates result is zero 

CARRY : input, driven by carry out (Cout) of ALU 

CLK : input, system clock 

CE : input, clock enable, normally set to 1, if set to 0 processor will HALT 

CLR : input, system reset, if pulsed high system will be reset 

** Accumulator
*** Theory
#+CAPTION: 
#+NAME:   fig:SED-HR4049
[[./images/reg8.jpg]]
Accumulator (ACC) : /8/ bit register, a general purpose data register, providing data (operand) to be processed by the ALU and used to *store* any result produced. Note, we can only store one 8 bit value at a time on the processor, other data values will need to be buffered in external memory.
*** Interface 
module pc (\\
d,\\
clk,\\
ce,\\
clr,\\
q\\
);
 \\
input [7:0] d     ; \\
input clk         ;   \\ 
input ce      ; \\
input clr     ; \\
output [7:0 ]q; \\

    | signal name | type   | size   |
    |-------------+--------+--------|
    | d           | input  | 8 bits |
    | clk         | input  | 1 bit  |
    | ce          | input  | 1 bit  |
    | clr         | input  | 1 bit  |
    | q           | output | 8 bits |
    |             |        |        |
    |-------------+--------+--------|
** ALU
*** Theory
*** Interface 
** MUX
*** MUX_{IR to ALU}
*** MUX_{PC to ALU}
*** MUX_{Address in RAM}
    
