$date
	Wed Dec  7 06:24:45 2022
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module sim_env $end
$var wire 1 ! toprw $end
$var wire 8 " topdout [7:0] $end
$var wire 16 # topdin [15:0] $end
$var wire 8 $ topadrs [7:0] $end
$var reg 1 % tstclk $end
$var reg 1 & tstclr $end
$scope module dut_ram $end
$var wire 1 % clk $end
$var wire 16 ' dout [15:0] $end
$var wire 1 ! rw $end
$var wire 8 ( din [7:0] $end
$var wire 8 ) adrs [7:0] $end
$upscope $end
$scope module dut_top $end
$var wire 1 % clk $end
$var wire 1 & clr $end
$var wire 16 * din [15:0] $end
$var wire 1 + zero $end
$var wire 1 ! rw $end
$var wire 8 , pc_out [7:0] $end
$var wire 1 - muxc $end
$var wire 1 . muxb $end
$var wire 1 / muxa $end
$var wire 16 0 ir_out [15:0] $end
$var wire 1 1 en_pc $end
$var wire 1 2 en_ir $end
$var wire 1 3 en_da $end
$var wire 8 4 dout [7:0] $end
$var wire 1 5 carry $end
$var wire 8 6 b [7:0] $end
$var wire 8 7 alu_result [7:0] $end
$var wire 5 8 alu [4:0] $end
$var wire 8 9 adrs [7:0] $end
$var wire 8 : a [7:0] $end
$scope module dut_acc $end
$var wire 1 % clk $end
$var wire 1 & clr $end
$var wire 1 3 en_da $end
$var wire 8 ; acc_in [7:0] $end
$var reg 8 < acc_out [7:0] $end
$upscope $end
$scope module dut_alu $end
$var wire 8 = dout [7:0] $end
$var wire 1 5 carry $end
$var wire 8 > b [7:0] $end
$var wire 5 ? alu [4:0] $end
$var wire 8 @ a [7:0] $end
$var reg 9 A temp_dout [8:0] $end
$var reg 1 + zero $end
$upscope $end
$scope module dut_decoder $end
$var wire 1 5 carry $end
$var wire 1 % clk $end
$var wire 1 & clr $end
$var wire 8 B ir [7:0] $end
$var wire 1 + zero $end
$var wire 1 C i $end
$var wire 1 D f $end
$var wire 1 E e $end
$var wire 1 F d $end
$var reg 1 G add $end
$var reg 5 H alu [4:0] $end
$var reg 1 I bitand $end
$var reg 1 J carry_reg $end
$var reg 1 K decexe $end
$var reg 1 3 en_da $end
$var reg 1 2 en_ir $end
$var reg 1 1 en_pc $end
$var reg 1 L inp $end
$var reg 1 M jump $end
$var reg 1 N jump_not_taken $end
$var reg 1 O jump_taken $end
$var reg 1 P jumpc $end
$var reg 1 Q jumpnc $end
$var reg 1 R jumpnz $end
$var reg 1 S jumpz $end
$var reg 1 T load $end
$var reg 1 / muxa $end
$var reg 1 . muxb $end
$var reg 1 - muxc $end
$var reg 1 U outp $end
$var reg 1 ! rw $end
$var reg 4 V state [3:0] $end
$var reg 1 W sub $end
$var reg 1 X zero_reg $end
$upscope $end
$scope module dut_ir $end
$var wire 1 % clk $end
$var wire 1 & clr $end
$var wire 16 Y d_in [15:0] $end
$var wire 1 2 en_ir $end
$var reg 16 Z d_out [15:0] $end
$upscope $end
$scope module dut_muxa $end
$var wire 8 [ acc [7:0] $end
$var wire 1 / muxa $end
$var wire 8 \ pc [7:0] $end
$var reg 8 ] a [7:0] $end
$upscope $end
$scope module dut_muxb $end
$var wire 8 ^ ir [7:0] $end
$var wire 8 _ mem [7:0] $end
$var wire 1 . muxb $end
$var reg 8 ` b [7:0] $end
$upscope $end
$scope module dut_muxc $end
$var wire 8 a ir [7:0] $end
$var wire 1 - muxc $end
$var wire 8 b pc [7:0] $end
$var reg 8 c c [7:0] $end
$upscope $end
$scope module dut_pc $end
$var wire 8 d adrs_in [7:0] $end
$var wire 1 % clk $end
$var wire 1 & clr $end
$var wire 1 1 en_pc $end
$var reg 8 e adrs_out [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 e
b10101010 d
b0 c
b0 b
b0 a
b10101010 `
b10101010 _
b0 ^
b0 ]
b0 \
b0 [
b0 Z
b10101010 Y
0X
0W
b0 V
0U
0T
0S
0R
0Q
0P
0O
1N
0M
0L
0K
0J
0I
b0 H
0G
0F
0E
0D
0C
b0 B
b10101010 A
b0 @
b0 ?
b10101010 >
b10101010 =
b0 <
b10101010 ;
b0 :
b0 9
b0 8
b10101010 7
b10101010 6
05
b0 4
03
02
01
b0 0
0/
0.
0-
b0 ,
0+
b10101010 *
b0 )
b0 (
b10101010 '
0&
0%
b0 $
b10101010 #
b0 "
0!
$end
#5
1%
#10
0%
#15
1%
#20
0%
#25
1&
1%
#30
0%
#35
12
1D
b1000 V
1%
#40
0%
#45
1.
b11 8
b11 ?
b11 H
1T
02
1K
0D
1F
b10101010 a
b10101010 ^
b100 V
b10101010 0
b10101010 Z
1%
#50
0%
#55
13
0F
1E
b10 V
1%
#60
0%
#65
b1 7
b1 ;
b1 =
b1 d
b1 A
0.
0T
03
0K
11
1/
b10100 8
b10100 ?
b10100 H
b0 :
b0 @
b0 ]
0E
1C
b10101010 "
b10101010 (
b10101010 4
b10101010 <
b10101010 [
b1 V
1%
#70
0%
#75
b10101111 7
b10101111 ;
b10101111 =
b10101111 d
b101 6
b101 >
b101 `
b10101111 A
b101 _
12
01
0/
b0 8
b0 ?
b0 H
b10101010 :
b10101010 @
b10101010 ]
b100000000000101 #
b100000000000101 '
b100000000000101 *
b100000000000101 Y
b1 $
b1 )
b1 9
b1 c
1D
0C
b1 ,
b1 \
b1 b
b1 e
b1000 V
1%
#80
0%
#85
1.
1G
02
1K
0D
1F
b101 a
b101 ^
b1000000 B
b100 V
b100000000000101 0
b100000000000101 Z
1%
#90
0%
#95
13
0F
1E
b10 V
1%
#100
0%
#105
0.
b10 7
b10 ;
b10 =
b10 d
0G
b10 A
03
0K
11
1/
b10100 8
b10100 ?
b10100 H
b1 :
b1 @
b1 ]
0E
1C
b10101111 "
b10101111 (
b10101111 4
b10101111 <
b10101111 [
b1 V
1%
#110
0%
#115
15
b101111 7
b101111 ;
b101111 =
b101111 d
b10000000 6
b10000000 >
b10000000 `
b100101111 A
b10000000 _
12
01
0/
b0 8
b0 ?
b0 H
b10101111 :
b10101111 @
b10101111 ]
b1110000010000000 #
b1110000010000000 '
b1110000010000000 *
b1110000010000000 Y
b10 $
b10 )
b10 9
b10 c
1D
0C
b10 ,
b10 \
b10 b
b10 e
b1000 V
1%
#120
0%
#125
bx 6
bx >
bx `
bx _
b10101111 7
b10101111 ;
b10101111 =
b10101111 d
05
bx #
bx '
bx *
bx Y
b10000000 $
b10000000 )
b10000000 9
b10000000 c
b10101111 A
1-
b10 8
b10 ?
b10 H
1U
02
1K
0D
1F
b10000000 a
b10000000 ^
b11100000 B
b100 V
b1110000010000000 0
b1110000010000000 Z
1%
#130
0%
#135
1!
0F
1E
b10 V
1%
#140
0%
#145
b11 7
b11 ;
b11 =
b11 d
b10 $
b10 )
b10 9
b10 c
b11 A
0-
0U
b10 :
b10 @
b10 ]
b10000000 6
b10000000 >
b10000000 `
0!
0K
11
1/
b10100 8
b10100 ?
b10100 H
b10000000 _
0E
1C
b1110000010000000 #
b1110000010000000 '
b1110000010000000 *
b1110000010000000 Y
b1 V
1%
#150
0%
#155
b10111110 7
b10111110 ;
b10111110 =
b10111110 d
b1111 6
b1111 >
b1111 `
b10111110 A
b1111 _
12
01
0/
b0 8
b0 ?
b0 H
b10101111 :
b10101111 @
b10101111 ]
b1111 #
b1111 '
b1111 *
b1111 Y
b11 $
b11 )
b11 9
b11 c
1D
0C
b11 ,
b11 \
b11 b
b11 e
b1000 V
1%
#160
0%
#165
b1111 7
b1111 ;
b1111 =
b1111 d
b1111 A
1.
b11 8
b11 ?
b11 H
1T
02
1K
0D
1F
b1111 a
b1111 ^
b0 B
b100 V
b1111 0
b1111 Z
1%
#170
0%
#175
13
0F
1E
b10 V
1%
#180
0%
#185
b100 7
b100 ;
b100 =
b100 d
b100 A
0.
0T
03
0K
11
1/
b10100 8
b10100 ?
b10100 H
b11 :
b11 @
b11 ]
0E
1C
b1111 "
b1111 (
b1111 4
b1111 <
b1111 [
b1 V
1%
#190
0%
#195
b10001111 7
b10001111 ;
b10001111 =
b10001111 d
b10000000 6
b10000000 >
b10000000 `
b10001111 A
b10000000 _
12
01
0/
b0 8
b0 ?
b0 H
b1111 :
b1111 @
b1111 ]
b1010000010000000 #
b1010000010000000 '
b1010000010000000 *
b1010000010000000 Y
b100 $
b100 )
b100 9
b100 c
1D
0C
b100 ,
b100 \
b100 b
b100 e
b1000 V
1%
#200
0%
#205
b10101111 6
b10101111 >
b10101111 `
b10101111 _
b10101111 7
b10101111 ;
b10101111 =
b10101111 d
b10101111 #
b10101111 '
b10101111 *
b10101111 Y
b10000000 $
b10000000 )
b10000000 9
b10000000 c
b10101111 A
1-
b11 8
b11 ?
b11 H
1L
02
1K
0D
1F
b10000000 a
b10000000 ^
b10100000 B
b100 V
b1010000010000000 0
b1010000010000000 Z
1%
#210
0%
#215
13
0F
1E
b10 V
1%
#220
0%
#225
b10000000 6
b10000000 >
b10000000 `
b10000000 _
b101 7
b101 ;
b101 =
b101 d
b1010000010000000 #
b1010000010000000 '
b1010000010000000 *
b1010000010000000 Y
b100 $
b100 )
b100 9
b100 c
b101 A
0-
0L
03
0K
11
1/
b10100 8
b10100 ?
b10100 H
b100 :
b100 @
b100 ]
0E
1C
b10101111 "
b10101111 (
b10101111 4
b10101111 <
b10101111 [
b1 V
1%
#230
0%
#235
x5
bx 7
bx ;
bx =
bx d
bx 6
bx >
bx `
bx A
bx _
12
01
0/
b0 8
b0 ?
b0 H
b10101111 :
b10101111 @
b10101111 ]
bx #
bx '
bx *
bx Y
b101 $
b101 )
b101 9
b101 c
1D
0C
b101 ,
b101 \
b101 b
b101 e
b1000 V
1%
#240
0%
#245
02
1K
0D
1F
bx a
bx ^
bx B
b100 V
bx 0
bx Z
1%
#250
0%
#255
0F
1E
b10 V
1%
#260
0%
#265
b110 7
b110 ;
b110 =
b110 d
05
b101 :
b101 @
b101 ]
b110 A
0K
11
1/
b10100 8
b10100 ?
b10100 H
0E
1C
b1 V
1%
#270
0%
#275
bx 7
bx ;
bx =
bx d
x5
bx A
12
01
0/
b0 8
b0 ?
b0 H
b10101111 :
b10101111 @
b10101111 ]
b110 $
b110 )
b110 9
b110 c
1D
0C
b110 ,
b110 \
b110 b
b110 e
b1000 V
1%
#280
0%
#285
02
1K
0D
1F
b100 V
1%
#290
0%
#295
0F
1E
b10 V
1%
#300
0%
#305
b111 7
b111 ;
b111 =
b111 d
05
b110 :
b110 @
b110 ]
b111 A
0K
11
1/
b10100 8
b10100 ?
b10100 H
0E
1C
b1 V
1%
#310
0%
#315
bx 7
bx ;
bx =
bx d
x5
bx A
12
01
0/
b0 8
b0 ?
b0 H
b10101111 :
b10101111 @
b10101111 ]
b111 $
b111 )
b111 9
b111 c
1D
0C
b111 ,
b111 \
b111 b
b111 e
b1000 V
1%
#320
0%
#325
02
1K
0D
1F
b100 V
1%
#330
0%
#335
0F
1E
b10 V
1%
#340
0%
#345
b1000 7
b1000 ;
b1000 =
b1000 d
05
b111 :
b111 @
b111 ]
b1000 A
0K
11
1/
b10100 8
b10100 ?
b10100 H
0E
1C
b1 V
1%
#350
0%
#355
bx 7
bx ;
bx =
bx d
x5
bx A
12
01
0/
b0 8
b0 ?
b0 H
b10101111 :
b10101111 @
b10101111 ]
b1000 $
b1000 )
b1000 9
b1000 c
1D
0C
b1000 ,
b1000 \
b1000 b
b1000 e
b1000 V
1%
#360
0%
#365
02
1K
0D
1F
b100 V
1%
#370
0%
#375
0F
1E
b10 V
1%
#380
0%
#385
b1001 7
b1001 ;
b1001 =
b1001 d
05
b1000 :
b1000 @
b1000 ]
b1001 A
0K
11
1/
b10100 8
b10100 ?
b10100 H
0E
1C
b1 V
1%
#390
0%
#395
bx 7
bx ;
bx =
bx d
x5
bx A
12
01
0/
b0 8
b0 ?
b0 H
b10101111 :
b10101111 @
b10101111 ]
b1001 $
b1001 )
b1001 9
b1001 c
1D
0C
b1001 ,
b1001 \
b1001 b
b1001 e
b1000 V
1%
#400
0%
#405
02
1K
0D
1F
b100 V
1%
#410
0%
#415
0F
1E
b10 V
1%
#420
0%
#425
b1010 7
b1010 ;
b1010 =
b1010 d
05
b1001 :
b1001 @
b1001 ]
b1010 A
0K
11
1/
b10100 8
b10100 ?
b10100 H
0E
1C
b1 V
1%
